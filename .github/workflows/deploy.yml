name: Build and Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
      - name: Build project with Kobweb
        run: ./gradlew :site:kobwebExport --no-daemon
        
      - name: Prepare deployment files
        run: |
          # Move build output to root level for Vercel
          mv site/.kobweb/site/* .
          mv site/.kobweb/site/.* . 2>/dev/null || true
          
          # Move HTML files from pages folder to root
          if [ -d pages ]; then
            # Copy index.html to root
            if [ -f pages/index.html ]; then
              cp pages/index.html index.html
            fi
            # Copy other HTML files to root
            if [ -f pages/about.html ]; then
              cp pages/about.html about.html
            fi
            if [ -f pages/work.html ]; then
              cp pages/work.html work.html
            fi
            if [ -f pages/contact.html ]; then
              cp pages/contact.html contact.html
            fi
          fi
          
          # List files for debugging
          echo "Root directory contents:"
          ls -la .
          
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
        
      - name: Deploy to Vercel (Production)
        if: github.ref == 'refs/heads/main'
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          
      - name: Deploy to Vercel (Preview)
        if: github.event_name == 'pull_request'
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}